volumes:
  gitlab-runner-config:

services:
  gitlab:
    image: gitlab/gitlab-ce
    container_name: gitlab
    profiles: [gitlab]
    restart: always
    hostname: 'gitlab.aplaline.com'
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://gitlab.aplaline.com:8929'
        gitlab_rails['gitlab_shell_ssh_port'] = 2424
    ports:
      - '8929:8929'
      - '443:443'
      - '2424:22'
    volumes:
      - '$GITLAB_HOME/config:/etc/gitlab'
      - '$GITLAB_HOME/logs:/var/log/gitlab'
      - '$GITLAB_HOME/data:/var/opt/gitlab'
    shm_size: '256m'

  gitlab-runner:
    image: gitlab/gitlab-runner:latest
    profiles: [gitlab]
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - gitlab-runner-config:/etc/gitlab-runner

  reverse-proxy:
    profiles: [reverse-proxy]
    # The official v3 Traefik docker image
    image: traefik:v3.1
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker "--providers.docker.defaultRule=Host(`{{ normalize .Name }}.docker.localhost`)"
    ports:
      # The HTTP port
      - "8081:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8082:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

  whoami:
    profiles: [app, whoami]
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    # labels:
    #  - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"

  app:
    profiles: [app, testme]
    build: .
    ports:
      - 3000
    volumes:
      - ./dist:/usr/share/caddy
    # labels:
    #   - "traefik.http.routers.app.rule=Host(`app.docker.localhost`)"

  caddy:
    image: caddy
    ports:
      - 9002:80
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
    network_mode: host


